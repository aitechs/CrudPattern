<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<# 
	// Modify this file and Save it.  It will generate 
	// Generator_Entity.txt
	//
	// Copy its content to your class file.

	var fields = new Dictionary<string, string>();
	
	//Enter your Database Table Name	
	//*******************************
	var tableName = "Students_History";
	
	//Enter Name of the Class
	//****************************
	var className = "StudentHistory";
	

	//Enter Fields To Be Generated
	//****************************
	fields.Add ("StudentId", "int");
	fields.Add ("School","string");
	fields.Add ("Batch","string");
	fields.Add ("Semester","string");
	fields.Add ("CourseCode","string");
	fields.Add ("YearLevel","int");
	fields.Add ("SectionName","string");


#>
using System;
using Dapper.Contrib.Extensions;
using Aitech.CrudPattern;

namespace CrudPattern
{
    [Table("<#= tableName #>")]
    public class <#= className #>: Entity
    {		
		<#= className #> Original;
	#region Default Properties
		<#foreach( var item in fields) {#>        
		private <#= item.Value + " _" + item.Key.ToLower() #>;        
        public <#= item.Value + " " + item.Key #> 
		{ 
			get { return <#= " _" + item.Key.ToLower() #>; } 
			set 
			{ 
				if (<#= " _" + item.Key.ToLower() #> != value) { <#= " _" + item.Key.ToLower() #> = value; OnChanged(value); }  
			}
		}

<#} #>
	#endregion
	
		protected void BeginTrackingChanges()
		{
			Original = new <#= className #> ();
			<#foreach( var item in fields) {#>        
			Original.<#= item.Key #> = this.<#= item.Key #>;<#} #>
		}

		protected void CancelChanges()
		{
			<#foreach( var item in fields) {#>        
			this.<#= item.Key #> = Original.<#= item.Key #>;<#} #>
		}
	}


	
}



